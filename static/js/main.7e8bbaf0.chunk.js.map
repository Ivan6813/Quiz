{"version":3,"sources":["components/Start.js","components/Quiz.js","components/End.js","App.js","index.js"],"names":["Start","userName","getUserName","error","className","placeholder","type","onChange","event","target","value","onClick","data","nameStartButton","Quiz","userCity","getUserCity","setError","userInfo","setUserInfo","useState","selectedOption","setSelectedOption","count","setCount","inputsWrapper","useRef","chooseOption","useEffect","checkedInput","current","querySelector","checked","questions","quest","ref","answerType","nameFinishButton","answers","map","item","htmlFor","id","name","answer","concat","nameNextButton","End","restart","i","App","step","setStep","setUserName","setUserCity","trim","city","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e8bbaf0.chunk.js","sourcesContent":["import data from '../data.json';\r\n\r\nfunction Start({userName, getUserName, error}) {\r\n\r\n  return (\r\n    <div className = 'card'>\r\n          <h1 className = 'title'>Start Quiz</h1>\r\n          <input className = 'input' \r\n                 placeholder = 'Enter your name' \r\n                 type = 'text' \r\n                 onChange = {(event) => {userName = event.target.value}}\r\n          />\r\n          {error && <div className = 'err'>{error}</div>}\r\n          <button className = 'btn'onClick = {() => getUserName(userName)}>       \r\n          {data.nameStartButton}\r\n          </button>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Start;","import React, { useState, useEffect, useRef } from 'react';\r\nimport data from '../data.json';\r\n\r\n\r\nfunction Quiz({userName, userCity, getUserCity, error, setError, userInfo, setUserInfo}) {\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  let [count, setCount] = useState(0);\r\n  const inputsWrapper = useRef();\r\n\r\n  useEffect(() => {\r\n    const checkedInput = inputsWrapper.current.querySelector('input:checked');\r\n    if(checkedInput) {\r\n      checkedInput.checked = false;\r\n    }\r\n  },[count]);\r\n\r\n  function chooseOption(event) {\r\n    setSelectedOption(event.target.value);\r\n    if(error) {\r\n      setError('');\r\n    }\r\n  }\r\n  \r\n  function showNextQuestion() {\r\n    if(selectedOption === '') {\r\n      return setError('Please, select one of options!');\r\n    }\r\n    setUserInfo(userInfo = userInfo.concat(selectedOption));\r\n    setSelectedOption('');\r\n    setCount(count + 1);\r\n  }\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div className=\"user\">Опрос проходит: {userName}</div>\r\n        <h2 className='question'>{data.questions[count].quest}</h2>\r\n        <div ref={inputsWrapper}>\r\n          {(data.questions[count].answerType === 'text') ? (\r\n            <>\r\n              <input type = 'text' \r\n                     className = 'input'\r\n                     placeholder = 'Enter your city'\r\n                     onChange = {(event) => {userCity = event.target.value}}\r\n              />\r\n              {error && <div className = 'err'>{error}</div>}\r\n              <button className = 'btn' onClick = {() => getUserCity(userCity)}>\r\n                {data.nameFinishButton}\r\n              </button>\r\n            </>\r\n          ):(\r\n            <>\r\n              <ul className = 'list'>\r\n                {data.questions[count].answers.map((item) => (\r\n                  <li className = 'item' key={item.id}>\r\n                    <label htmlFor = {item.id} className = 'label'>\r\n                      <input type = {data.questions[count].answerType} \r\n                             name = {data.questions[count].id} \r\n                             value = {item.answer} \r\n                             id = {item.id}\r\n                             className = 'label-input'\r\n                             onChange = {chooseOption}\r\n                      />\r\n                      {item.answer}\r\n                    </label>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              {error && <div className = 'err'>{error}</div>}\r\n              <button className = 'btn'onClick = {showNextQuestion}>\r\n                {data.nameNextButton}\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;","import data from '../data.json';\r\n\r\nfunction End({restart,  userName, userInfo}) {\r\n\r\n  return (\r\n    <div className = 'card'>\r\n      <h3 className = 'question'>Result</h3>\r\n      <ul className = 'list'>\r\n        <li className = 'item'>Name : {userName}</li>\r\n        {data.questions.map((item, i) => {\r\n          return <li className = 'item'>{item.quest} : {userInfo[i]}</li>\r\n        })}\r\n      </ul>\r\n      <button className = 'btn' onClick = {restart}>Повторить</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default End;","import React, { useState } from 'react';\nimport Start from './components/Start';\nimport Quiz from './components/Quiz';\nimport End from './components/End';\n\nfunction App() {\n  const [step, setStep] = useState(1);\n  const [userName, setUserName] = useState('');\n  const [userCity, setUserCity] = useState('');\n  let [userInfo, setUserInfo] = useState([]);\n  const [error, setError] = useState('');\n\n  function getUserName(name) {\n    if(name.trim() === '') {\n      return setError('Please, enter your name!');\n    }else {\n      setStep(2);\n      setUserName(name.trim());\n      setError('');\n    }\n  }\n\n  function getUserCity(city) {\n    if(city.trim() === '') {\n      return setError('Please, enter your city!');\n    }else {\n      setStep(3);\n      setUserCity(city.trim());\n      setUserInfo(userInfo = userInfo.concat(city));\n      setError('');\n    }\n  }\n\n  function restart() {\n    setUserName('');\n    setUserCity('');\n    setUserInfo([]);\n    setStep(1);\n  }\n\n  return (\n    <div className = 'app'>\n        {step === 1 && <Start \n          getUserName = {getUserName}\n          userName = {userName} \n          error = {error}\n        />}\n        {step === 2 && <Quiz \n          userName = {userName}\n          userCity = {userCity}\n          getUserCity = {getUserCity}\n          error = {error}\n          setError = {setError}\n          userInfo = {userInfo}\n          setUserInfo = {setUserInfo}\n        />}\n        {step === 3 && <End \n          restart = {restart}\n          userName = {userName}\n          userInfo = {userInfo}\n        />}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}